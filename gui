local lp = game.Players.LocalPlayer
local Win11Lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/Skribb11es/Win11UILib/main/main.lua", true))()
local changer = game.ReplicatedStorage.ChangeGameValue
local menu = Win11Lib.createMenu("Admin Panel", Enum.KeyCode.LeftAlt, true, 1, 1, "", lp.DisplayName, "Administrator")
local nip = game:GetService("Workspace").GameValues["Night In Progress"]
local gv = game:GetService("Workspace").GameValues
local dchanger = game.ReplicatedStorage.CalltoDoor
local lchanger = game.ReplicatedStorage.CalltoLight
local bon = game.ReplicatedStorage.BonBonJumpscare
local hrp = game.Players.LocalPlayer.Character.HumanoidRootPart
local pos = hrp.Position
local PlaySound = game:GetService("ReplicatedStorage").PlaySound
local mat = game:GetService("ReplicatedStorage").Mask
local cha = game:GetService("ReplicatedStorage").Monitor
local cp = game:GetService("ReplicatedStorage").ControlPanel
local rdb = game.Workspace["Right Door Button"]
local jumper = game.ReplicatedStorage.CallToJumpscare


local game = menu.addTab("Game", "gameFlag", true, "7059346386")


game.addButton("Night Guard Win", "Instantly makes the Night Guard win", function()
    changer:FireServer("Victory", true)
end)

game.addButton("Night Guard Lose", "Instantly makes the Night Guard lose without a jumpscare", function()
    changer:FireServer("Death", true)
end)

game.addButton("Instant Jumpscare", "Instantly makes you jumpscare the guard (Doesn't work for some animatronics)", function()
        jumper:FireServer()
end)

game.addButton("Toy Chica Anger", "Instantly makes Toy Chica mad (even if you aren't Toy Chica)", function()
    changer:FireServer("ToyChicaCupcakeAmount", 69)
end)

game.addButton("Bon Bon Kill", "Instantly makes the Night Guard lose to Bon Bon", function()
    bon:FireServer()
end)

game.addButton("Legit Bon Bon Kill", "Sends a legit Bon Bon (plays sound of FT. Freddy throwing and doesn't jump if door closed)", function()
    -- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "rbxassetid://2074804594",
    [2] = 0.6,
    [3] = 25,
    [4] = CFrame.new(pos)
}

PlaySound:FireServer(unpack(args))
wait(5)
if rdb.Closed.Value == false then
    bon:FireServer()
elseif rdb.Closed.Value == true then
end
end)

game.addToggle("Jumpscares", "jFlag", "Toggles if jumpscares kill or not, breaks features like doors when off", nip.Value, function(j)
    if j ~= gv["Night In Progress"].Value then
    changer:FireServer("Night In Progress", j)
    end
end)

game.addSlider("Temperature", "tempFlag", -100, 100, gv.Temperature.Value, true, "Sets the temperature to the selected number", "4987464739", function(temp)
    changer:FireServer("Temperature", temp)
    changer:FireServer("PreferedTemperature", temp)
end)

game.addSlider("Power (0-100)", "rpowFlag", 0, 100, gv.Power.Value / 10, true, "Sets power to the selected number, restricted to 0-100", "410870344", function(rpow)
    rpow = rpow * 10
    changer:FireServer("Power", rpow)
end)

game.addSlider("Power", "upowFlag", 0, 10000, gv.Power.Value / 10, true, "Sets power to the selected number, restricted to 0-10k", "410870344", function(upow)
    upow = upow * 10
    changer:FireServer("Power", upow)
end)

game.addSlider("Power Usage", "powuFlag", -100, 100, gv.Usage.Value, true, "Sets power usage (how much power is used/gained per second", "410870344", function(powu)
    powu = powu * 10
    changer:FireServer("Usage", powu)
end)

game.addSlider("Music Box Woundiness (0-100)", "rboxFlag", 0, 100, gv.Wound.Value, true, "Sets music box woundiness to the selected number, restricted to 0-100", "170813353", function(rbox)
    changer:FireServer("Wound", rbox)
end)

game.addSlider("Music Box Woundiness", "uboxFlag", 0, 10000, gv.Wound.Value, true, "Sets music box woundiness to the selected number, restricted to 0-10k", "170813353", function(ubox)
    changer:FireServer("Wound", ubox)
end)

local cerror = game.addDropdown("Errors", "Change errors")
cerror.addOption("Ventilation Error", "ventFlag", gv["AC Error"].Value, function(vent)
        if vent ~= gv["AC Error"].Value then
        changer:FireServer("AC Error", vent)
        end
end)
cerror.addOption("Camera Error", "camFlag", gv["Camera Error"].Value, function(cam)
        if cam ~= gv["Camera Error"].Value then
        changer:FireServer("Camera Error", cam)
        end
end)
cerror.addOption("Door Error", "doorFlag", gv["Door Error"].Value, function(door)
        if door ~= gv["Door Error"].Value then
        changer:FireServer("Door Error", door)
        end
end)
cerror.addOption("Audio Error", "audFlag", gv["Audio Error"].Value, function(aud)
        if aud ~= gv["Audio Error"].Value then
        changer:FireServer("Audio Error", aud)
        end
end)
cerror.addOption("Light Error", "lightFlag", gv["Light Error"].Value, function(light)
        if light ~= gv["Light Error"].Value then
        changer:FireServer("Light Error", light)
        end
end)

game.addToggle("Funtime Foxy Mania", "testerFlag", "Makes everyone Funtime Foxy, goes into effect next round", gv.TestMode.Value, function(tester)
   if tester ~= gv.TestMode.Value then
   changer:FireServer("TestMode", tester)
   end
end)


local ctrl = menu.addTab("Controller", "ctrlFlag", false, "3639528370")


local dors = ctrl.addDropdown("Doors/Vents", "Toggle doors and vents")
dors.addOption("Left Door", "ldorFlag", false, function(ldor)
    dchanger:FireServer("Left Door Button", ldor)
end)
dors.addOption("Right Door", "rdorFlag", false, function(rdor)
    dchanger:FireServer("Right Door Button", rdor)
end)
dors.addOption("Left Vent", "lvenFlag", false, function(lven)
    dchanger:FireServer("Left Vent Button", lven)
end)
dors.addOption("Right Vent", "rvenFlag", false, function(rven)
    dchanger:FireServer("Right Vent Button", rven)
end)

local funcz = ctrl.addDropdown("Disable Functions", "Disable key functions")
funcz.addOption("Mask", "maskFlag", gv.Mask.Value, function(mask)
    if mask == true and gv.Mask.Value == true then
        mat:FireServer()
    end
    changer:FireServer("Mask Disabled", mask)
end)
funcz.addOption("Cameras", "cammyFlag", gv.Monitor.Value, function(cammy)
    if cammy == true and gv.Monitor.Value == true then
        cha:FireServer()
    end
    changer:FireServer("Camera Disabled", cammy)
end)
funcz.addOption("Lights", "litFlag", false, function(lit)
    if lit == true then
        lchanger:FireServer(false)
    end
    changer:FireServer("Light Disabled", lit)
end)
funcz.addOption("Doors/Vents", "drFlag", false, function(dr)
    if dr == true then
        dchanger:FireServer("Left Door Button", false)
        dchanger:FireServer("Right Door Button", false)
        dchanger:FireServer("Left Vent Button", false)
        dchanger:FireServer("Right Vent Button", false)
    end
    changer:FireServer("Door Disabled", dr)
end)

local zfunc = ctrl.addDropdown("Toggle Functions", "Turn key functions on/off")
zfunc.addOption("Mask", "maksFlag", gv.Mask.Value, function(maks)
    if maks ~= gv.Mask.Value then
        mat:FireServer()
    end
end)
zfunc.addOption("Cameras", "chiFlag", gv.Monitor.Value, function(chi)
    if chi ~= gv.Monitor.Value then
        cha:FireServer()
    end
end)
zfunc.addOption("Control Panel", "panFlag", gv["Control Panel"].Value, function(pan)
    if pan ~= gv["Control Panel"].Value then
        cp:FireServer()
    end
end)
zfunc.addOption("Hallway Light", "liteFlag", false, function(lite)
    lchanger:FireServer(lite)
end)

--anti door error cuz i hate door errors
while wait(0.5) do
    if gv["Door Error"] == true and gv["Night Guard"] == lp.Name then
        changer:FireServer("Door Error",false)
    end
    end
